
Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ vim demo_branch.txt

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git add demo_branch.txt
warning: in the working copy of 'demo_branch.txt', LF will be replaced by CRLF the next time Git touches it

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git status
On branch demo_branch
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   demo_branch.txt


Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git status
On branch demo_branch
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   demo_branch.txt


Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git status
On branch demo_branch
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   demo_branch.txt


Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git commit -m "added files"
[demo_branch ea856e3] added files
 1 file changed, 1 insertion(+)
 create mode 100644 demo_branch.txt

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git status
On branch demo_branch
nothing to commit, working tree clean

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git log --oneline --decorate
ea856e3 (HEAD -> demo_branch) added files
306e5aa (origin/main, main) Update first.txt
39959f1 first commit

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git push origin demo_branch
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 342 bytes | 342.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
remote:
remote: Create a pull request for 'demo_branch' on GitHub by visiting:
remote:      https://github.com/aradhya684/demo_git_push/pull/new/demo_branch
remote:
To https://github.com/aradhya684/demo_git_push.git
 * [new branch]      demo_branch -> demo_branch

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (demo_branch)
$ git checkout main
Switched to branch 'main'

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (main)
$ git status
On branch main
nothing to commit, working tree clean

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (main)
$ git push origin main
Everything up-to-date

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (main)
$ git merge demo_branch
Updating 306e5aa..ea856e3
Fast-forward
 demo_branch.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 demo_branch.txt

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (main)
$ git push origin main
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/aradhya684/demo_git_push.git
   306e5aa..ea856e3  main -> main

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (main)
$ git status
On branch main
nothing to commit, working tree clean

Hiray@DESKTOP-377NRSH MINGW64 ~/Desktop/demo file (main)
$
